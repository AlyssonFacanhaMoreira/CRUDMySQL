/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package br.alysson.crud.mysql.form;

import br.alysson.crud.mysql.dao.PersonDao;
import br.alysson.crud.mysql.logic.Person;
import java.sql.SQLException;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Alysson
 */
public class JFCRUD extends javax.swing.JFrame {

    DefaultTableModel tableModel = new DefaultTableModel(null, new String[]{"ID", "Name", "Phone", "Address"});
    ListSelectionModel listSelectionModel;
    List<Person> people;
    
    /**
     * Creates new form JFCRUD
     */
    public JFCRUD() {
        initComponents();
        toggleEnableFields(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTFID = new javax.swing.JTextField();
        jTFName = new javax.swing.JTextField();
        jTFPhone = new javax.swing.JTextField();
        jTFAddress = new javax.swing.JTextField();
        jTFSearchArg = new javax.swing.JTextField();
        jCBField = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jBTSearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jBTNew = new javax.swing.JButton();
        jBTUpdate = new javax.swing.JButton();
        jBTDelete = new javax.swing.JButton();
        jBTSave = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CRUD MySQL");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Person Data"));

        jLabel1.setText("ID:");

        jLabel2.setText("Name:");

        jLabel3.setText("Phone:");

        jLabel4.setText("Address:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTFID, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTFName, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jLabel3))
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTFPhone, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                    .addComponent(jTFAddress))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTFID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jTFPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jTFName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTFAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jCBField.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Name", "Phone", "Address" }));

        jLabel5.setText("Search:");

        jBTSearch.setText("Search");
        jBTSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBTSearchActionPerformed(evt);
            }
        });

        jTable.setModel(tableModel);
        jTable.setToolTipText("");
        jTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        listSelectionModel = jTable.getSelectionModel();
        listSelectionModel.addListSelectionListener(new ListSelectionListener(){
            public void valueChanged(ListSelectionEvent e){
                if(!e.getValueIsAdjusting()){
                    selectedTableRow(jTable);
                }
            }
        });
        jScrollPane1.setViewportView(jTable);

        jBTNew.setText("New");
        jBTNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBTNewActionPerformed(evt);
            }
        });

        jBTUpdate.setText("Update");
        jBTUpdate.setToolTipText("");
        jBTUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBTUpdateActionPerformed(evt);
            }
        });

        jBTDelete.setText("Delete");
        jBTDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBTDeleteActionPerformed(evt);
            }
        });

        jBTSave.setText("Save");
        jBTSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBTSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(224, 224, 224)
                .addComponent(jBTNew)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBTUpdate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBTDelete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBTSave)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBTNew)
                    .addComponent(jBTUpdate)
                    .addComponent(jBTDelete)
                    .addComponent(jBTSave))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jCBField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jTFSearchArg, javax.swing.GroupLayout.PREFERRED_SIZE, 568, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBTSearch))
                            .addComponent(jLabel5))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTFSearchArg, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBTSearch)
                    .addComponent(jCBField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBTNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBTNewActionPerformed
        // TODO add your handling code here:
        
        toggleEnableFields(true);
        jTFID.setEditable(false);
        
        clearFields();
    }//GEN-LAST:event_jBTNewActionPerformed

    private void jBTSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBTSaveActionPerformed
        // TODO add your handling code here:
        if(validateData()){ 
            insert();
            defaultSearch();
            search();
        }
        
    }//GEN-LAST:event_jBTSaveActionPerformed

    private void jBTSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBTSearchActionPerformed
        // TODO add your handling code here:
        search();
    }//GEN-LAST:event_jBTSearchActionPerformed

    private void jBTDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBTDeleteActionPerformed
        // TODO add your handling code here:
        try{
            delete();
            defaultSearch();
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, "Error while deleting record: "+e.getMessage());
        }
    }//GEN-LAST:event_jBTDeleteActionPerformed

    private void jBTUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBTUpdateActionPerformed
        // TODO add your handling code here:
        try{
            update();
            defaultSearch();
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, "Error while updating record: "+e.getMessage());
        }
    }//GEN-LAST:event_jBTUpdateActionPerformed

    public void insert(){
        Person person = new Person();
        person.setName(jTFName.getText());
        person.setPhone(jTFPhone.getText());
        person.setAddress(jTFAddress.getText());
        try {
            PersonDao personDao = new PersonDao();
            personDao.create(person);
            
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error while inserting into database: "+e.getMessage());
        }
    }
    
    public void search(){
        
        try{
            PersonDao personDao = new PersonDao();
            
            String field = jCBField.getSelectedItem().toString().toLowerCase();
            String where = "WHERE "+field+" LIKE ?";
            String whereArg = jTFSearchArg.getText();
            
            people = personDao.getPeopleList(where, whereArg);
            
            displayData(people);
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, "Error while searching through database: "+e.getMessage());
        }
    
    }
    
    public void update() throws SQLException{
        if(jTable.getSelectedRow()!=-1 && validateData()){
            Person person = new Person();
            PersonDao personDao = new PersonDao();
            
            person.setId(Long.valueOf(jTFID.getText()));
            person.setName(jTFName.getText());
            person.setPhone(jTFPhone.getText());
            person.setAddress(jTFAddress.getText());
            
            personDao.update(person);
        }
    }
    
    public void delete() throws SQLException{
        int ans = JOptionPane.showConfirmDialog(null, "Do you really wish to delete this record?", 
                                                "Warning",JOptionPane.YES_NO_OPTION);
        if(ans == JOptionPane.YES_NO_OPTION){
                PersonDao personDao = new PersonDao();
                personDao.delete(people.get(jTable.getSelectedRow()));
            
        }
    }
    
    public void defaultSearch(){
        jTFSearchArg.setText("");
        search();
    }
    
    public void selectedTableRow(JTable table){
        if(table.getSelectedRow()!= -1){
            jTFID.setText(String.valueOf(people.get(table.getSelectedRow()).getId()));
            jTFName.setText(String.valueOf(people.get(table.getSelectedRow()).getName()));
            jTFPhone.setText(String.valueOf(people.get(table.getSelectedRow()).getPhone()));
            jTFAddress.setText(String.valueOf(people.get(table.getSelectedRow()).getAddress()));
            toggleEnableFields(true);
            jTFID.setEditable(false);
        }else{
            clearFields();
        }
    }
    
    
    public void displayData(List<Person> people){
        while(tableModel.getRowCount()>0){
            tableModel.removeRow(0);
        }
        
        if(people.size()>0){
            String line[] = new String[]{null,null,null,null};  
            for(int i=0;i<people.size();i++){
                tableModel.addRow(line);
                tableModel.setValueAt(people.get(i).getId(), i, 0);
                tableModel.setValueAt(people.get(i).getName(), i, 1);
                tableModel.setValueAt(people.get(i).getPhone(), i, 2);
                tableModel.setValueAt(people.get(i).getAddress(), i, 3);
            }
        
        }else{
            JOptionPane.showMessageDialog(null, "No records found.");
        }
    
    }
    
    public boolean validateData(){
    
        if(!jTFName.getText().equals("") &&
           !jTFPhone.getText().equals("") &&
           !jTFAddress.getText().equals("")){
            return true;
        }else{
            JOptionPane.showMessageDialog(null, "Please fill all required fields.");
            return false;
        }
        
    }
    
    public void toggleEnableFields(boolean enable){
        jTFID.setEditable(enable);
        jTFName.setEditable(enable);
        jTFPhone.setEditable(enable);
        jTFAddress.setEditable(enable);
        
        if(enable){
            jTFID.setEditable(!enable);
        }
        
    }
    
    public void clearFields(){
        jTFID.setText("");
        jTFName.setText("");
        jTFPhone.setText("");
        jTFAddress.setText("");
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFCRUD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFCRUD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFCRUD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFCRUD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFCRUD().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBTDelete;
    private javax.swing.JButton jBTNew;
    private javax.swing.JButton jBTSave;
    private javax.swing.JButton jBTSearch;
    private javax.swing.JButton jBTUpdate;
    private javax.swing.JComboBox jCBField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTFAddress;
    private javax.swing.JTextField jTFID;
    private javax.swing.JTextField jTFName;
    private javax.swing.JTextField jTFPhone;
    private javax.swing.JTextField jTFSearchArg;
    private javax.swing.JTable jTable;
    // End of variables declaration//GEN-END:variables
}
